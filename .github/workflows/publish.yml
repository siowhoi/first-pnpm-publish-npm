name: ðŸš€ Release package
on:
  workflow_dispatch:
    inputs:
      input_version:
        description: "Release version (e.g., 1.0.0)"
        required: true
env:
  CI: true
jobs:
  validate_input:
    runs-on: ubuntu-latest
    steps:
      - name: Validate Release Version Input Format
        id: validate
        run: |
          input_version="${{ github.event.inputs.input_version }}"

          # Regular expression pattern for "1.0.0" format
          pattern='^\d+\.\d+\.\d+$'

          if [[ ! $input_version =~ $pattern ]]; then
            echo "Input version does not match the expected format (1.0.0)"
            exit 1
          fi

          echo "Release Version input is valid"

  release:
    needs: validate_input
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        working-directory: src
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8.6.9

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"
          cache-dependency-path: src/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm i

      - name: Check
        run: pnpm lint

      - name: Build CLI tool ðŸ”§
        run: pnpm build

      # Bump package version
      # Use tag latest
      - name: Bump release version
        run: |
          pnpm version:bump $INPUT_VERSION
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV
        env:
          INPUT_VERSION: ${{ github.event.inputs.input_version }}

      # Publish version to public repository
      - name: Publish package on NPM ðŸ“¦
        run: pnpm -r publish --no-git-checks --access=public --tag ${{ env.RELEASE_TAG }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Push repository changes
      - name: Push changes to repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin && git push --tags

      # Update GitHub release with changelog
      - name: Update GitHub release documentation
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.INPUT_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
